# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url = jdbc:mysql://localhost:3306/spring-security-tutorial
#spring.datasource.username = root
#spring.datasource.password = admin
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

spring.datasource.url=jdbc:postgresql://ec2-54-217-243-160.eu-west-1.compute.amazonaws.com:5432/d82uot2eipjg1a?user=gtdhfwspkmvdgo&password=29dd2119d3abd2d75f9ac55b20680d02fc5d4e99026c9928161fa580f4b65520&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username = gtdhfwspkmvdgo
spring.datasource.password = 29dd2119d3abd2d75f9ac55b20680d02fc5d4e99026c9928161fa580f4b65520
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?